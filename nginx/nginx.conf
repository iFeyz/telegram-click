
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 10000;

    use epoll;

    multi_accept on;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    client_body_buffer_size 128k;
    client_max_body_size 10M;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;

    upstream bot_service_pool {

        least_conn;


        server bot-service-1:8080 max_fails=3 fail_timeout=30s;
        server bot-service-2:8080 max_fails=3 fail_timeout=30s;
        server bot-service-3:8080 max_fails=3 fail_timeout=30s;
        server bot-service-4:8080 max_fails=3 fail_timeout=30s;
        server bot-service-5:8080 max_fails=3 fail_timeout=30s;

        keepalive 100;
        keepalive_timeout 60s;
        keepalive_requests 1000;
    }


    upstream leaderboard_http_pool {
        server leaderboard-service-1:50052 max_fails=3 fail_timeout=30s;
        server leaderboard-service-2:50052 max_fails=3 fail_timeout=30s;

        keepalive 50;
    }


    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }


    server {
        listen 80;
        server_name localhost;

        client_max_body_size 10M;

        root /usr/share/nginx/html;
        index index.html;

        location /ws {
            proxy_pass http://bot_service_pool;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            proxy_buffering off;

            proxy_request_buffering off;
        }

 
        location /health {
            proxy_pass http://bot_service_pool/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;

            access_log off;
        }


        location /nginx_status {
            stub_status on;
            access_log off;

   
        }

  
        location / {
            try_files $uri $uri/ /index.html;

            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            if_modified_since off;
            etag off;
        }

        location ~* \.(css|js)$ {
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "0";
            if_modified_since off;
            etag off;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 5m;
            add_header Cache-Control "public, max-age=300";
        }
    }
}

stream {
    # Logging
    log_format grpc '$remote_addr - [$time_local] $protocol $status '
                    '$bytes_sent $bytes_received $session_time '
                    'upstream: $upstream_addr';

    access_log /var/log/nginx/grpc-access.log grpc;


    upstream game_grpc_pool {
        server game-service-1:50051 max_fails=3 fail_timeout=30s;
        server game-service-2:50051 max_fails=3 fail_timeout=30s;
        server game-service-3:50051 max_fails=3 fail_timeout=30s;
    }


    upstream leaderboard_grpc_pool {
        server leaderboard-service-1:50052 max_fails=3 fail_timeout=30s;
        server leaderboard-service-2:50052 max_fails=3 fail_timeout=30s;
    }

 
    server {
        listen 50051;

        proxy_pass game_grpc_pool;

        proxy_timeout 30s;
        proxy_connect_timeout 10s;

        proxy_socket_keepalive on;
    }


    server {
        listen 50052;

        proxy_pass leaderboard_grpc_pool;

        proxy_timeout 30s;
        proxy_connect_timeout 10s;

        proxy_socket_keepalive on;
    }
}
